{"version":3,"sources":["components/Message.js","components/Notification.js","components/Footer.js","services/messages.js","App.js","index.js"],"names":["Message","message","name","content","Notification","notification","className","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","GetThings","Date","getFullYear","App","useState","messages","setMessages","newMessage","setNewMessage","errorNotification","setErrorNotification","useEffect","messageService","initialMessages","map","key","id","onSubmit","event","preventDefault","messageObject","length","date","toISOString","returnedMessage","concat","catch","error","setTimeout","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"iNAWeA,EATC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,4BACE,2BAAIA,EAAQC,MACZ,2BAAID,EAAQE,WCQHC,EAZM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACtB,OAAqB,OAAjBA,EACK,KAIP,yBAAKC,UAAU,SACZD,ICQQE,EAfA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uD,gBCXAC,EAAU,iCAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCJrCG,EAAY,SAAC,GAAc,IAAZlB,EAAW,EAAXA,KAGnB,OACE,6BACE,sCACWA,EADX,eAJkB,IAAImB,MAAOC,iBAoFpBC,EAzEH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTC,EADS,KACCC,EADD,OAEoBF,mBAAS,IAF7B,mBAETG,EAFS,KAEGC,EAFH,OAGkCJ,mBAAS,MAH3C,mBAGTK,EAHS,KAGUC,EAHV,KAKhBC,qBAAU,WACRC,IAEGjB,MAAK,SAAAkB,GACJP,EAAYO,QAEf,IAwCH,OACE,6BACE,+CAEA,kBAAC,EAAD,CAAW/B,KAAK,gBAChB,wCACA,4BA3CsBuB,EAASS,KAAI,SAAAjC,GAAO,OAC5C,kBAAC,EAAD,CACEkC,IAAKlC,EAAQmC,GACbnC,QAASA,QA2CT,0BAAMoC,SAvCS,SAACC,GAClBA,EAAMC,iBACN,IAAMC,EAAgB,CACpBJ,GAAIX,EAASgB,OAAS,EACtBvC,KAAM,SACNC,QAASwB,EACTe,MAAM,IAAIrB,MAAOsB,eAGnBX,EACUQ,GACPzB,MAAK,SAAA6B,GACJlB,EAAYD,EAASoB,OAAOD,IAC5BhB,EAAc,OAEfkB,OAAM,SAAAC,GACLjB,EAAqB,0BAAD,OACQU,EAAcrC,QADtB,MAGpB6C,YAAW,WACTlB,EAAqB,QACpB,UAmBH,2BACEmB,MAAOtB,EACPuB,SAjBoB,SAACZ,GAC3Ba,QAAQC,IAAId,EAAMe,OAAOJ,OACzBrB,EAAcU,EAAMe,OAAOJ,UAiBvB,4BAAQK,KAAK,UAAb,SAEF,kBAAC,EAAD,CAAcjD,aAAcwB,IAC5B,kBAAC,EAAD,Q,MCjFN0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0e70cd59.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Message = ({ message }) => {\r\n  return (\r\n    <li>\r\n      <p>{message.name}</p>\r\n      <p>{message.content}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {notification}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Duo Kasparaitis, 2020</em>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Footer","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/messages'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update\r\n} ","import React, { useState, useEffect } from 'react';\nimport Message from './components/Message'\nimport Notification from './components/Notification' \nimport Footer from './components/Footer'\nimport messageService from './services/messages'\n\nconst GetThings = ({ name }) => {\n  const getDate = () => new Date().getFullYear()\n\n  return (\n    <div>\n      <p>\n        You are {name}, and it's {getDate()}\n      </p>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [messages, setMessages] = useState([])\n  const [newMessage, setNewMessage] = useState('')\n  const [errorNotification, setErrorNotification] = useState(null) \n  \n  useEffect(() => {\n    messageService\n      .getAll()\n      .then(initialMessages => {\n        setMessages(initialMessages)\n      })\n  }, [])\n\n\n  const messagerows = () => messages.map(message =>\n    <Message \n      key={message.id}\n      message={message}\n    />\n  )\n\n  const addMessage = (event) => {\n    event.preventDefault()\n    const messageObject = {\n      id: messages.length + 1,      \n      name: 'Not me',\n      content: newMessage,\n      date: new Date().toISOString()\n    }\n    \n    messageService\n      .create(messageObject)\n      .then(returnedMessage => {\n        setMessages(messages.concat(returnedMessage))\n        setNewMessage('')\n      })\n      .catch(error => {\n        setErrorNotification(\n          `Error posting message '${messageObject.content}'` \n        )\n        setTimeout(() => {\n          setErrorNotification(null)\n        }, 5000)\n      })\n  }\n\n  const handleMessageChange = (event) => {\n    console.log(event.target.value)\n    setNewMessage(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Duo Kasparaitis</h1>\n\n      <GetThings name=\"Zarathustra\" />\n      <h2>Messages</h2>\n      <ul>\n        {messagerows()}\n      </ul>\n      <form onSubmit={addMessage}>\n        <input \n          value={newMessage} \n          onChange={handleMessageChange}\n        />\n        <button type=\"submit\">Send</button> \n      </form>\n      <Notification notification={errorNotification} />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}